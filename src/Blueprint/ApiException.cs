using System;

namespace Blueprint
{
    /// <summary>
    /// An exception that provides a means of carrying more specific details about an exception that
    /// can be used to generate standards-based responses depending on the API host.
    /// </summary>
    [Serializable]
    public class ApiException : Exception
    {
        /// <summary>
        /// Initialises a new instance of the <see cref="ApiException" /> class.
        /// </summary>
        /// <param name="title">The title of this exception, which <em>SHOULD NOT</em> change from occurrence to
        ///     occurrence.</param>
        /// <param name="type">The type of this exception, which <em>SHOULD NOT</em> change from occurrence to
        ///     occurrence, and is typically a URI that when followed gives more details of the problem.</param>
        /// <param name="detail">Detailed information about this exception, which is specific to this instance.</param>
        /// <param name="httpStatus">The HTTP status code this exception is best represented by.</param>
        public ApiException(string title, string type, string detail, int httpStatus)
            : base(detail)
        {
            Title = title;
            Type = type;
            HttpStatus = httpStatus;
        }

        /// <summary>
        /// Initialises a new instance of the <see cref="ApiException" /> class.
        /// </summary>
        /// <param name="title">The title of this exception, which <em>SHOULD NOT</em> change from occurrence to
        ///     occurrence.</param>
        /// <param name="type">The type of this exception, which <em>SHOULD NOT</em> change from occurrence to
        ///     occurrence, and is typically a URI that when followed gives more details of the problem.</param>
        /// <param name="detail">Detailed information about this exception, which is specific to this instance.</param>
        /// <param name="httpStatus">The HTTP status code this exception is best represented by.</param>
        /// <param name="inner">The exception that triggered this one.</param>
        public ApiException(string title, string type, string detail, int httpStatus, Exception inner)
            : base(detail, inner)
        {
            Title = title;
            Type = type;
            HttpStatus = httpStatus;
        }

        /// <summary>
        /// The HTTP status code([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.
        /// </summary>
        public int HttpStatus { get; set; }

        /// <summary>
        /// A URI reference [RFC3986] that identifies the problem type. This specification encourages that, when
        /// dereferenced, it provide human-readable documentation for the problem type
        /// (e.g., using HTML [W3C.REC-html5-20141028]).  When this member is not present, its value is assumed to be
        /// "about:blank".
        /// </summary>
        public string Type { get; }

        /// <summary>
        /// A short, human-readable summary of the problem type. It SHOULD NOT change from occurrence to occurrence
        /// of the problem, except for purposes of localization (e.g., using proactive content negotiation;
        /// see[RFC7231], Section 3.4).
        /// </summary>
        public string Title { get; set; }

        /// <summary>
        /// A human-readable explanation specific to this occurrence of the problem.
        /// </summary>
        public string Detail => Message;
    }
}
